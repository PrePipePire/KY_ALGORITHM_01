INF = 100  # 무한대 값

def floyd_warshall(graph, v):
    print("Graph")
    print_graph(graph, v)

    for k in range(v):
        for i in range(v):
            for j in range(v):
                # D[i, j] = min(D[i, j], D[i, k] + D[k, j])
                if graph[i][k] != INF and graph[k][j] != INF and graph[i][j] > graph[i][k] + graph[k][j]:
                    graph[i][j] = graph[i][k] + graph[k][j]
                    print(f"Change : [{i},{j}] = [{i},{k}] + [{k},{j}] = {graph[i][j]}")

        print_graph(graph, v)

def print_graph(graph, v):
    for i in range(v):
        for j in range(v):
            print(f"{graph[i][j]:8}", end=" ")
        print()

if __name__ == "__main__":
    V = 5  # 정점의 갯수
    graph = [
        [0, 4, 2, 5, INF],
        [INF, 0, 1, INF, 4],
        [1, 3, 0, 1, 2],
        [-2, INF, INF, 0, 2],
        [INF, -3, 3, 1, 0]
    ]

    floyd_warshall(graph, V)
