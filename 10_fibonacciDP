def fibonacci_dp(n, memo=None):
    if memo is None:
        memo = {}
    
    if n in memo: 
        return memo[n]
    if n <= 1:
        return n
    
    memo[n] = fibonacci_dp(n - 1, memo) + fibonacci_dp(n - 2, memo)
    return memo[n]

if __name__ == "__main__":
    n = 10
    print("Fibonacci Memoization:", fibonacci_dp(n))
