import random

N = 100
a = [0] * N

def random_init():
    global a
    a = [random.randint(0, 1000) for _ in range(N)]

def print_array():
    print(" ".join(map(str, a)))

def swap(i, j):
    global a
    a[i], a[j] = a[j], a[i]

# 버블정렬
def bubble_sort():
    print("\n버블정렬:")
    for i in range(N - 1):
        for j in range(N - i - 1):
            if a[j] > a[j + 1]:
                swap(j, j + 1)

# 선택정렬
def selection_sort():
    print("\n선택정렬:")
    for i in range(N - 1):
        min_index = i
        for j in range(i + 1, N):
            if a[j] < a[min_index]:
                min_index = j
        swap(i, min_index)

# 삽입정렬
def insertion_sort():
    print("\n삽입정렬:")
    for i in range(1, N):
        current = a[i]
        j = i - 1
        while j >= 0 and a[j] > current:
            a[j + 1] = a[j]
            j -= 1
        a[j + 1] = current

# 쉘정렬
def shell_sort():
    print("\n쉘정렬:")
    gaps = [701, 301, 132, 57, 23, 10, 4, 1]  # 쉘 정렬 간격
    for gap in gaps:
        if gap >= N:
            continue
        print(f"gap = {gap}")
        for i in range(gap, N):
            current = a[i]
            j = i
            while j >= gap and a[j - gap] > current:
                a[j] = a[j - gap]
                j -= gap
            a[j] = current
        print_array()

# 힙정렬
def heap_sort():
    print("\n힙정렬:")

    def down_heap(n, i):
        largest = i
        left = 2 * i + 1
        right = 2 * i + 2

        if left < n and a[left] > a[largest]:
            largest = left
        if right < n and a[right] > a[largest]:
            largest = right

        if largest != i:
            swap(i, largest)
            down_heap(n, largest)

    # 힙 생성
    for i in range(N // 2 - 1, -1, -1):
        down_heap(N, i)

    # 정렬
    for i in range(N - 1, 0, -1):
        swap(0, i)
        down_heap(i, 0)

# 기수정렬
def radix_sort():
    print("\n기수정렬:")

    def counting_sort(exp):
        output = [0] * N
        count = [0] * 10

        for i in range(N):
            index = (a[i] // exp) % 10
            count[index] += 1

        for i in range(1, 10):
            count[i] += count[i - 1]

        for i in range(N - 1, -1, -1):
            index = (a[i] // exp) % 10
            output[count[index] - 1] = a[i]
            count[index] -= 1

        for i in range(N):
            a[i] = output[i]

    max_val = max(a)
    exp = 1
    while max_val // exp > 0:
        counting_sort(exp)
        exp *= 10

# 메인 실행
if __name__ == "__main__":
    random_init()
    print_array()

    print("\nPython의 sorted()")
    random_init()
    a = sorted(a)
    print_array()

    random_init()
    bubble_sort()
    print_array()

    random_init()
    selection_sort()
    print_array()

    random_init()
    insertion_sort()
    print_array()

    random_init()
    shell_sort()
    print_array()

    random_init()
    heap_sort()
    print_array()

    random_init()
    radix_sort()
    print_array()
