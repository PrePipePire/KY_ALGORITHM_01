import sys

V = 10

city = ["서울", "천안", "원주", "강릉", "논산", "대전", "대구", "포항", "광주", "부산"]

graph = [[0,   12,  15,  0,   0,   0,   0,   0,   0,   0],
    [12,  0,   0,   0,   4,   10,  0,   0,   0,   0],
    [15,  0,   0,   21,  0,   0,   7,   0,   0,   0],
    [0,   0,   21,  0,   0,   0,   0,   25,  0,   0],
    [0,   4,   0,   0,   0,   3,   0,   0,   13,  0],
    [0,   10,  0,   0,   3,   0,   10,  0,   0,   0],
    [0,   0,   7,   0,   0,   10,  0,   19,  0,   9],
    [0,   0,   0,   25,  0,   0,   19,  0,   0,   5],
    [0,   0,   0,   0,   13,  0,   0,   0,   0,   15],
    [0,   0,   0,   0,   0,   0,   9,   5,   15,  0]]

def min_distance(dist, sptSet):
    min_val = sys.maxsize
    min_index = -1

    for v in range(V):
        if dist[v] < min_val and not sptSet[v]:
            min_val = dist[v]
            min_index = v
    return min_index

def dijkstra(graph, src):
    dist = [sys.maxsize] * V  
    dist[src] = 0 
    sptSet = [False] * V  
    for _ in range(V):
        u = min_distance(dist, sptSet)  
        sptSet[u] = True  
      
        for v in range(V):
            if (graph[u][v] > 0 and not sptSet[v] and 
                dist[u] != sys.maxsize and dist[u] + graph[u][v] < dist[v]):
                dist[v] = dist[u] + graph[u][v]

    print("도시\t거리")
    for i in range(V):
        print(f"{city[i]}\t{dist[i]}")

dijkstra(graph, 5)
